/*
 * This file is generated by jOOQ.
 */
package com.netcracker.parkinglotmanagement.data.tables.records;


import com.netcracker.parkinglotmanagement.data.tables.ParkingSlotTable;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParkingSlotRecord extends UpdatableRecordImpl<ParkingSlotRecord> implements Record5<UUID, Integer, UUID, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PARKING_SLOT.ID</code>.
     */
    public ParkingSlotRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_SLOT.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PARKING_SLOT.CHARGES</code>.
     */
    public ParkingSlotRecord setCharges(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_SLOT.CHARGES</code>.
     */
    public Integer getCharges() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PARKING_SLOT.FLOOR_ID</code>.
     */
    public ParkingSlotRecord setFloorId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_SLOT.FLOOR_ID</code>.
     */
    public UUID getFloorId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>PARKING_SLOT.SLOT_NUMBER</code>.
     */
    public ParkingSlotRecord setSlotNumber(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_SLOT.SLOT_NUMBER</code>.
     */
    public Integer getSlotNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PARKING_SLOT.VEHICLE_TYPE</code>.
     */
    public ParkingSlotRecord setVehicleType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_SLOT.VEHICLE_TYPE</code>.
     */
    public String getVehicleType() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, Integer, UUID, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, Integer, UUID, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ParkingSlotTable.PARKING_SLOT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ParkingSlotTable.PARKING_SLOT.CHARGES;
    }

    @Override
    public Field<UUID> field3() {
        return ParkingSlotTable.PARKING_SLOT.FLOOR_ID;
    }

    @Override
    public Field<Integer> field4() {
        return ParkingSlotTable.PARKING_SLOT.SLOT_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return ParkingSlotTable.PARKING_SLOT.VEHICLE_TYPE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCharges();
    }

    @Override
    public UUID component3() {
        return getFloorId();
    }

    @Override
    public Integer component4() {
        return getSlotNumber();
    }

    @Override
    public String component5() {
        return getVehicleType();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCharges();
    }

    @Override
    public UUID value3() {
        return getFloorId();
    }

    @Override
    public Integer value4() {
        return getSlotNumber();
    }

    @Override
    public String value5() {
        return getVehicleType();
    }

    @Override
    public ParkingSlotRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ParkingSlotRecord value2(Integer value) {
        setCharges(value);
        return this;
    }

    @Override
    public ParkingSlotRecord value3(UUID value) {
        setFloorId(value);
        return this;
    }

    @Override
    public ParkingSlotRecord value4(Integer value) {
        setSlotNumber(value);
        return this;
    }

    @Override
    public ParkingSlotRecord value5(String value) {
        setVehicleType(value);
        return this;
    }

    @Override
    public ParkingSlotRecord values(UUID value1, Integer value2, UUID value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParkingSlotRecord
     */
    public ParkingSlotRecord() {
        super(ParkingSlotTable.PARKING_SLOT);
    }

    /**
     * Create a detached, initialised ParkingSlotRecord
     */
    public ParkingSlotRecord(UUID id, Integer charges, UUID floorId, Integer slotNumber, String vehicleType) {
        super(ParkingSlotTable.PARKING_SLOT);

        setId(id);
        setCharges(charges);
        setFloorId(floorId);
        setSlotNumber(slotNumber);
        setVehicleType(vehicleType);
    }
}
