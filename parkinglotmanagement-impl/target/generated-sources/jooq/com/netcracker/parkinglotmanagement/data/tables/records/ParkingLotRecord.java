/*
 * This file is generated by jOOQ.
 */
package com.netcracker.parkinglotmanagement.data.tables.records;


import com.netcracker.parkinglotmanagement.data.tables.ParkingLotTable;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParkingLotRecord extends UpdatableRecordImpl<ParkingLotRecord> implements Record5<UUID, String, Double, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PARKING_LOT.ID</code>.
     */
    public ParkingLotRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_LOT.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PARKING_LOT.ADDRESS</code>.
     */
    public ParkingLotRecord setAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_LOT.ADDRESS</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PARKING_LOT.LATITUDE</code>.
     */
    public ParkingLotRecord setLatitude(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_LOT.LATITUDE</code>.
     */
    public Double getLatitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>PARKING_LOT.LONGITUDE</code>.
     */
    public ParkingLotRecord setLongitude(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_LOT.LONGITUDE</code>.
     */
    public Double getLongitude() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>PARKING_LOT.NUMBER_OF_BLOCKS</code>.
     */
    public ParkingLotRecord setNumberOfBlocks(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PARKING_LOT.NUMBER_OF_BLOCKS</code>.
     */
    public Integer getNumberOfBlocks() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, Double, Double, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, Double, Double, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ParkingLotTable.PARKING_LOT.ID;
    }

    @Override
    public Field<String> field2() {
        return ParkingLotTable.PARKING_LOT.ADDRESS;
    }

    @Override
    public Field<Double> field3() {
        return ParkingLotTable.PARKING_LOT.LATITUDE;
    }

    @Override
    public Field<Double> field4() {
        return ParkingLotTable.PARKING_LOT.LONGITUDE;
    }

    @Override
    public Field<Integer> field5() {
        return ParkingLotTable.PARKING_LOT.NUMBER_OF_BLOCKS;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public Double component3() {
        return getLatitude();
    }

    @Override
    public Double component4() {
        return getLongitude();
    }

    @Override
    public Integer component5() {
        return getNumberOfBlocks();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public Double value3() {
        return getLatitude();
    }

    @Override
    public Double value4() {
        return getLongitude();
    }

    @Override
    public Integer value5() {
        return getNumberOfBlocks();
    }

    @Override
    public ParkingLotRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ParkingLotRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public ParkingLotRecord value3(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public ParkingLotRecord value4(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public ParkingLotRecord value5(Integer value) {
        setNumberOfBlocks(value);
        return this;
    }

    @Override
    public ParkingLotRecord values(UUID value1, String value2, Double value3, Double value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParkingLotRecord
     */
    public ParkingLotRecord() {
        super(ParkingLotTable.PARKING_LOT);
    }

    /**
     * Create a detached, initialised ParkingLotRecord
     */
    public ParkingLotRecord(UUID id, String address, Double latitude, Double longitude, Integer numberOfBlocks) {
        super(ParkingLotTable.PARKING_LOT);

        setId(id);
        setAddress(address);
        setLatitude(latitude);
        setLongitude(longitude);
        setNumberOfBlocks(numberOfBlocks);
    }
}
